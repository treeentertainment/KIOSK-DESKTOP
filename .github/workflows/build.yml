name: Builder

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            args: --mac
            artifact-name: mac-artifact

          - os: ubuntu-latest
            args: --linux
            artifact-name: linux-artifact

          - os: windows-latest
            args: --win
            artifact-name: win-artifact

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build Electron App
        run: npm run build -- ${{ matrix.args }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/

  release:
    needs: build
    if: contains(github.event.head_commit.message, 'Official') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.sha }}
          tag_name: v-${{ github.run_number }}
          files: |
            artifacts/**/*
            dist/official.exe
            dist/official.appimage
            dist/official.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  delete-history:
    if: contains(github.event.head_commit.message, 'delete-history')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (to access exclude.txt)
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh

      - name: Setup authentication
        run: echo "${{ secrets.PERSONAL_TOKEN }}" | gh auth login --with-token

      - name: Create exclude.txt if not exists
        run: |
          touch exclude.txt

      - name: Read exclude.txt to get excluded run IDs
        id: get_excludes
        run: |
          EXCLUDES=$(cat exclude.txt || echo "")
          echo "::set-output name=excluded_runs::$EXCLUDES"

      - name: Delete previous runs (excluding exclude.txt list)
        env:
          REPO: ${{ github.repository }}
          EXCLUDED_RUNS: ${{ steps.get_excludes.outputs.excluded_runs }}
        run: |
          gh api "repos/$REPO/actions/runs" --paginate --jq '.workflow_runs[].id' | while read run_id; do
            # Skip excluded runs
            if [[ "$EXCLUDED_RUNS" != *"$run_id"* && "$run_id" != "${{ github.run_id }}" ]]; then
              echo "Deleting run $run_id"
              gh api -X DELETE "repos/$REPO/actions/runs/$run_id"
            fi
          done

      - name: Append this run ID to exclude.txt
        run: |
          echo "${{ github.run_id }}" >> exclude.txt
          cat exclude.txt
